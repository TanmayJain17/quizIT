{"version":3,"sources":["components/Start.js","components/Question.js","components/End.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Start","onQuizStart","useState","name","setName","email","setEmail","newuser","setNewuser","className","TextField","style","marginBottom","label","variant","autoComplete","value","onChange","e","target","FormControlLabel","control","Checkbox","onClick","data","theName","emailId","axios","post","then","response","message","window","alert","console","log","id","sessionStorage","setItem","Question","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","selected","setSelected","error","setError","radiosWrapper","useRef","useEffect","findCheckedInput","current","querySelector","checked","changeHandler","question","ref","choices","map","choice","i","type","prevState","q","a","End","results","onAnswersCheck","onReset","time","correctAnswers","setCorrectAnswers","getItem","correct","forEach","result","index","answer","length","Math","floor","userid","removeItem","location","Button","color","size","alignSelf","marginTop","href","Modal","onClose","App","step","setStep","setActiveQuestion","answers","setAnswers","showModal","setShowModal","clearInterval","interval","quizData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"44HA6EeA,EAvED,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACf,EAAqBC,mBAAS,KAA9B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAuBF,mBAAS,KAAhC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA6BJ,mBAAS,IAAtC,mBAAOK,EAAP,KAAeC,EAAf,KA6BA,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UAEA,cAACC,EAAA,EAAD,CACIC,MAAO,CAAEC,aAAc,IACvBC,MAAM,kBACNC,QAAQ,WACRC,aAAa,MACbC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAQc,EAAEC,OAAOH,UAEnC,cAACN,EAAA,EAAD,CACCC,MAAO,CAAEC,aAAc,IACvBC,MAAM,sBACNC,QAAQ,WACRC,aAAa,MACbC,MAAOX,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAOH,UAGrC,cAACI,EAAA,EAAD,CACcC,QAAS,cAACC,EAAA,EAAD,CAAUnB,KAAK,aACxBoB,QAjDD,SAACL,GAQlBV,EAAW,CAAEgB,KANA,CAETC,QAAStB,EACTuB,QAASrB,MA6CKQ,MAAM,uCAEpB,wBAAQJ,UAAU,8BAA8Bc,QAvCxD,WACEf,EAAWD,GACXoB,IAAMC,KAAK,gBAAgBrB,GACtBsB,MAAK,SAACC,GACFA,EAASN,KAAKO,SACfC,OAAOC,MAAMH,EAASN,KAAKO,SAE3BG,QAAQC,IAAIL,EAASN,KAAKY,IAC1BC,eAAeC,QAAQ,SAASR,EAASN,KAAKY,IAC9CJ,OAAOC,MAAM,mCA8Bf,oBAEA,gDACA,2CAEA,wBAAQxB,UAAU,0BAA0Bc,QAAStB,EAArD,2B,QCfKsC,EArDE,SAAC,GAAiG,IAA/Ff,EAA8F,EAA9FA,KAAMgB,EAAwF,EAAxFA,eAAgBC,EAAwE,EAAxEA,kBAAmBC,EAAqD,EAArDA,eAAgBC,EAAqC,EAArCA,oBAAqBC,EAAgB,EAAhBA,UAChG,EAAgC1C,mBAAS,IAAzC,mBAAO2C,EAAP,KAAiBC,EAAjB,KACA,EAA0B5C,mBAAS,IAAnC,mBAAO6C,EAAP,KAAcC,EAAd,KACMC,EAAgBC,mBAEtBC,qBAAU,WACR,IAAMC,EAAmBH,EAAcI,QAAQC,cAAc,iBAC1DF,IACDA,EAAiBG,SAAU,KAE5B,CAAC/B,IAEJ,IAAMgC,EAAgB,SAACtC,GACrB4B,EAAY5B,EAAEC,OAAOH,OAClB+B,GACDC,EAAS,KAiBb,OACE,qBAAKvC,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBe,EAAKiC,WAC3B,qBAAKhD,UAAU,UAAUiD,IAAKT,EAA9B,SACGzB,EAAKmC,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAChB,wBAAOrD,UAAU,6BAAjB,UACE,uBAAOsD,KAAK,QAAQ5D,KAAK,SAASa,MAAO6C,EAAQ5C,SAAUuC,IAC1DK,IAFgDC,QAMtDf,GAAS,qBAAKtC,UAAU,kBAAf,SAAkCsC,IAC5C,wBAAQtC,UAAU,6CAA6Cc,QA3B9C,SAACL,GACxB,GAAgB,KAAb2B,EACD,OAAOG,EAAS,6BAElBR,GAAe,SAAAwB,GAAS,4BAAQA,GAAR,CAAmB,CAAEC,EAAGzC,EAAKiC,SAAUS,EAAGrB,QAClEC,EAAY,IACTJ,EAAiBD,EAAoB,EACtCE,EAAoBD,EAAiB,GAErCE,EAAU,IAkBN,0B,SCYKuB,EAtDH,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAAS5C,EAA0C,EAA1CA,KAAe6C,GAA2B,EAApCC,QAAoC,EAA3BD,gBACrC,GADgE,EAAXE,KACTrE,mBAAS,IAArD,mBAAOsE,EAAP,KAAuBC,EAAvB,KACIrC,EAAKC,eAAeqC,QAAQ,UAyBhC,OAxBAvB,qBAAU,WACR,IAAIwB,EAAU,EACdP,EAAQQ,SAAQ,SAACC,EAAQC,GACpBD,EAAOX,IAAM1C,EAAKsD,GAAOC,QAC1BJ,OAGJF,EAAkBE,KAEjB,IAgBD,qBAAKlE,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,8CACA,8BAAI+D,EAAJ,OAAwBhD,EAAKwD,UAC7B,4BAAG,mCAASC,KAAKC,MAAOV,EAAiBhD,EAAKwD,OAAU,KAArD,SAEH,wBAAQvE,UAAU,sBAAsBc,QAAS8C,EAAjD,gCAEA,wBAAQ5D,UAAU,oBAAoBc,QArB9C,WAEEI,IAAMC,KAAK,cAAc,CAACiD,OAAOT,EAAQe,OAAO/C,IAC3CP,MAAK,SAACC,GACHI,QAAQC,IAAIL,GACZE,OAAOC,MAAMH,EAASN,KAAKO,SAC3BM,eAAe+C,WAAW,UAC1BpD,OAAOqD,SAAS,QAclB,oBACA,cAACC,EAAA,EAAD,CACFxE,QAAQ,YACRyE,MAAM,YACNC,KAAK,QACL7E,MAAO,CAAE8E,UAAW,SAAUC,UAAW,IACzCnE,QA9BN,WACEc,eAAe+C,WAAW,WA8BtBO,KAAK,IANH,oCCjBKC,EAzBD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASzB,EAAoB,EAApBA,QAAS5C,EAAW,EAAXA,KACjC,OACE,sBAAKf,UAAU,kBAAf,UACE,qBAAKA,UAAU,mBAAmBc,QAASsE,IAC3C,sBAAKpF,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,mBAAGA,UAAU,mBAAb,0BACA,wBAAQA,UAAU,SAASc,QAASsE,OAEtC,yBAASpF,UAAU,0BAAnB,SACE,6BACG2D,EAAQR,KAAI,SAACiB,EAAQf,GAAT,OACX,qBAAYrD,UAAU,OAAtB,UACE,4BAAG,iCAASoE,EAAOZ,MACnB,oBAAGxD,UAAWoE,EAAOX,IAAM1C,EAAKsC,GAAGiB,OAAS,4CAA8C,2CAA1F,0BAAoJF,EAAOX,KAC1JW,EAAOX,IAAM1C,EAAKsC,GAAGiB,QAAU,oBAAGtE,UAAU,yCAAb,6BAAuEe,EAAKsC,GAAGiB,YAHxGjB,iB,QC6DRgC,EAhEH,WACV,MAAwB5F,mBAAS,GAAjC,mBAAO6F,EAAP,KAAaC,EAAb,KACA,EAA4C9F,mBAAS,GAArD,mBAAOwC,EAAP,KAAuBuD,EAAvB,KACA,EAA8B/F,mBAAS,IAAvC,mBAAOgG,EAAP,KAAgBC,EAAhB,KACA,EAAkCjG,oBAAS,GAA3C,mBAAOkG,EAAP,KAAkBC,EAAlB,KAGAlD,qBAAU,WACI,IAAT4C,GACDO,cAXFC,aAaC,CAACR,IAyBJ,OACE,sBAAKtF,UAAU,MAAf,UACY,IAATsF,GAAc,cAAC,EAAD,CAAO9F,YAzBD,WACnBoC,eAAeqC,QAAQ,UAK3BsB,EAAQ,IAJNhE,OAAOC,MAAM,8BACbD,OAAOqD,SAAS,QAuBN,IAATU,GAAc,cAAC,EAAD,CACbvE,KAAMgF,EAAShF,KAAKkB,GACpBF,eAAgB2D,EAChB1D,kBAAmB+D,EAAShF,KAAKwD,OACjCtC,eAAgBA,EAChBC,oBAAqBsD,EACrBrD,UAAWoD,IAEH,IAATD,GAAc,cAAC,EAAD,CACb3B,QAAS8B,EACT1E,KAAMgF,EAAShF,KACf8C,QAxBoB,WACxB2B,EAAkB,GAClBE,EAAW,IACXH,EAAQ,IAsBJ3B,eAAgB,kBAAMgC,GAAa,MAIpCD,GAAa,cAAC,EAAD,CACZP,QAAS,kBAAMQ,GAAa,IAC5BjC,QAAS8B,EACT1E,KAAMgF,EAAShF,WCzDRiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9E,MAAK,YAAkD,IAA/C+E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.151ad2d3.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport { TextField } from \"@material-ui/core\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport axios from \"axios\"\n\nconst Start = ({ onQuizStart }) => {\n  const [name,setName]=useState(' ')\n  const [email,setEmail]=useState(' ')\n  const [newuser,setNewuser] = useState({})\n\n  \n    \n    const updateData = (e) => {\n      /* e.preventDefault() */\n      const data = {\n          \n          theName: name,\n          emailId: email,\n          \n      }\n      setNewuser({ data })\n\n\n  }\n  \n  function onSubmit() {\n    setNewuser(newuser)\n    axios.post('../../details',newuser)\n        .then((response) => {\n          if(response.data.message){\n            window.alert(response.data.message)\n          }\n            console.log(response.data.id)\n            sessionStorage.setItem('userId',response.data.id)\n            window.alert('You can now start the test!')\n        });\n}\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n      \n        <TextField\n            style={{ marginBottom: 25 }}\n            label=\"Enter Your Name\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n           <TextField\n            style={{ marginBottom: 25 }}\n            label=\"Enter Your Email ID\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            \n          />\n          <FormControlLabel\n                        control={<Checkbox name=\"checkedA\" />}\n                        onClick={updateData}\n                        label=\"I accept the terms and conditions.\"\n                    />\n          <button className=\"button is-success is-medium\" onClick={onSubmit}>Submit</button>\n       \n          <h1>Start the quiz</h1>\n          <p>Good luck!</p>\n          \n          <button className=\"button is-info is-large\" onClick={onQuizStart}>Start</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Start;","import React, { useState, useEffect, useRef } from 'react';\n\nconst Question = ({ data, onAnswerUpdate, numberOfQuestions, activeQuestion, onSetActiveQuestion, onSetStep }) => {\n  const [selected, setSelected] = useState('');\n  const [error, setError] = useState('');\n  const radiosWrapper = useRef();\n\n  useEffect(() => {\n    const findCheckedInput = radiosWrapper.current.querySelector('input:checked');\n    if(findCheckedInput) {\n      findCheckedInput.checked = false;\n    }\n  }, [data]);\n\n  const changeHandler = (e) => {\n    setSelected(e.target.value);\n    if(error) {\n      setError('');\n    }\n  }\n  \n  const nextClickHandler = (e) => {\n    if(selected === '') {\n      return setError('Please select one option!');\n    }\n    onAnswerUpdate(prevState => [...prevState, { q: data.question, a: selected }]);\n    setSelected('');\n    if(activeQuestion < numberOfQuestions - 1) {\n      onSetActiveQuestion(activeQuestion + 1);\n    }else {\n      onSetStep(3);\n    }\n  }\n\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h2 className=\"mb-5\">{data.question}</h2>\n          <div className=\"control\" ref={radiosWrapper}>\n            {data.choices.map((choice, i) => (\n              <label className=\"radio has-background-light\" key={i}>\n                <input type=\"radio\" name=\"answer\" value={choice} onChange={changeHandler} />\n                {choice}\n              </label>\n            ))}\n          </div>\n          {error && <div className=\"has-text-danger\">{error}</div>}\n          <button className=\"button is-link is-medium is-fullwidth mt-4\" onClick={nextClickHandler}>Next</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Question;","import React, { useEffect, useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport axios from 'axios';\n\n/* import { formatTime } from '../utils'; */\n\nconst End = ({ results, data, onReset, onAnswersCheck, time }) => {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\nconst id = sessionStorage.getItem('userId')\n  useEffect(() => {\n    let correct = 0;\n    results.forEach((result, index) => {\n      if(result.a === data[index].answer) {\n        correct++;\n      }\n    });\n    setCorrectAnswers(correct);\n    // eslint-disable-next-line\n  }, []);\n  function clearStorage(){\n    sessionStorage.removeItem('userId')\n  }\n  function onSubmit() {\n    \n    axios.post('../../score',{result:results,userid:id})\n        .then((response) => {\n            console.log(response)\n            window.alert(response.data.message)\n            sessionStorage.removeItem('userId')\n            window.location='/'\n        });\n}\n\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h3>Your results</h3>\n          <p>{correctAnswers} of {data.length}</p>\n          <p><strong>{Math.floor((correctAnswers / data.length) * 100)}%</strong></p>\n          {/* <p><strong>Your time:</strong> {formatTime(time)}</p> */}\n          <button className=\"button is-info mr-2\" onClick={onAnswersCheck}>Check your answers</button>\n          {/* <button className=\"button is-success\" onClick={onReset}>Try again</button> */}\n          <button className=\"button is-success\" onClick={onSubmit}>Submit</button>\n          <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        style={{ alignSelf: \"center\", marginTop: 20 }}\n        onClick={clearStorage}\n        href=\"/\"\n      >\n        Go to homepage\n      </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default End;","import React from 'react';\n\nconst Modal = ({ onClose, results, data }) => {\n  return(\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={onClose}></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">Your answers</p>\n          <button className=\"delete\" onClick={onClose}></button>\n        </header>\n        <section className=\"modal-card-body content\">\n          <ul>\n            {results.map((result, i) => (\n              <li key={i} className=\"mb-6\">\n                <p><strong>{result.q}</strong></p>\n                <p className={result.a === data[i].answer ? 'has-background-success has-text-white p-2' : 'has-background-danger has-text-white p-2'}>Your answer: {result.a}</p>\n                {result.a !== data[i].answer && <p className=\"has-background-link has-text-white p-2\">Correct answer: {data[i].answer}</p>}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Start from './components/Start';\nimport Question from './components/Question';\nimport End from './components/End';\nimport Modal from './components/Modal';\nimport quizData from './data/quiz.json';\n\nlet interval;\n\nconst App = () => {\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n // const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    if(step === 3) {\n      clearInterval(interval);\n    }\n  }, [step]);\n\n  const quizStartHandler = () => {\n    if(!sessionStorage.getItem('userId')){\n      window.alert('please enter details first')\n      window.location='/'\n    }\n    else{\n    setStep(2);\n    }\n    // interval = setInterval(() => {\n    //   setTime(prevTime => prevTime + 1);\n    // }, 1000);\n  }\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    //setTime(0);\n    // interval = setInterval(() => {\n    //   setTime(prevTime => prevTime + 1);\n    // }, 1000);\n  }\n\n  return (\n    <div className=\"App\">\n      {step === 1 && <Start onQuizStart={quizStartHandler} />}\n      {step === 2 && <Question \n        data={quizData.data[activeQuestion]}\n        onAnswerUpdate={setAnswers}\n        numberOfQuestions={quizData.data.length}\n        activeQuestion={activeQuestion}\n        onSetActiveQuestion={setActiveQuestion}\n        onSetStep={setStep}\n      />}\n      {step === 3 && <End \n        results={answers}\n        data={quizData.data}\n        onReset={resetClickHandler}\n        onAnswersCheck={() => setShowModal(true)}\n       // time={time}\n      />}\n\n      {showModal && <Modal \n        onClose={() => setShowModal(false)}\n        results={answers}\n        data={quizData.data}\n      />}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}