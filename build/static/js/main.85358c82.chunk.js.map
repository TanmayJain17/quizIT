{"version":3,"sources":["components/Start.js","components/Question.js","components/End.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Start","onQuizStart","useState","theEmail","theName","thePhone","formValues","setFromValues","className","TextField","style","marginBottom","label","variant","autoComplete","id","value","theNames","onChange","e","target","handleChangeName","name","Phone","handleChangePhone","handleChangeEmail","Button","onClick","axios","post","then","response","data","message","window","alert","console","log","sessionStorage","setItem","Question","onAnswerUpdate","numberOfQuestions","activeQuestion","onSetActiveQuestion","onSetStep","selected","setSelected","error","setError","radiosWrapper","useRef","useEffect","findCheckedInput","current","querySelector","checked","changeHandler","question","ref","choices","map","choice","i","type","prevState","q","a","End","results","onReset","onAnswersCheck","time","correctAnswers","setCorrectAnswers","getItem","correct","forEach","result","index","answer","length","color","tyle","alignSelf","marginbottom","userid","removeItem","location","size","marginTop","href","Modal","onClose","App","step","setStep","setActiveQuestion","answers","setAnswers","showModal","setShowModal","clearInterval","interval","quizData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u4CAoHeA,EA7GD,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAKf,EAAoCC,mBADd,CAAEC,SAAU,GAAIC,QAAS,GAAIC,SAAU,KAC7D,mBAAOC,EAAP,KAAmBC,EAAnB,KAmDA,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UAEE,cAACC,EAAA,EAAD,CACEC,MAAO,CAAEC,aAAc,IACvBC,MAAM,kBACNC,QAAQ,WACRC,aAAa,MACbC,GAAG,OACHC,MAAOV,EAAWW,SAClBC,SAAU,SAACC,IA5CI,SAACA,GAExBZ,EAAc,2BAAKD,GAAN,IAAkBF,QAASe,EAAEC,OAAOJ,SA0CtBK,CAAiBF,MAEtC,cAACV,EAAA,EAAD,CACEC,MAAO,CAAEC,aAAc,IACvBC,MAAM,uBACNC,QAAQ,WACRC,aAAa,MACbQ,KAAK,QAELN,MAAOV,EAAWiB,MAClBL,SAAU,SAACC,IAjDK,SAACA,GAEzBZ,EAAc,2BAAKD,GAAN,IAAkBD,SAAUc,EAAEC,OAAOJ,SA+CvBQ,CAAkBL,MAGvC,cAACV,EAAA,EAAD,CACEC,MAAO,CAAEC,aAAc,IACvBC,MAAM,sBACNC,QAAQ,WACRC,aAAa,MACbQ,KAAK,QACLN,MAAOV,EAAWH,SAClBe,SAAU,SAACC,IArDK,SAACA,GAEzBZ,EAAc,2BAAKD,GAAN,IAAkBH,SAAUgB,EAAEC,OAAOJ,SAmDvBS,CAAkBN,MAQvC,uBACA,cAACO,EAAA,EAAD,CAAQlB,UAAU,8BAA8BmB,QAvDxD,WACEpB,EAAcD,GACdsB,IAAMC,KAAK,gBAAiBvB,GACzBwB,MAAK,SAACC,GACDA,EAASC,KAAKC,QAChBC,OAAOC,MAAMJ,EAASC,KAAKC,UAG3BG,QAAQC,IAAIN,EAASC,KAAKjB,IAC1BuB,eAAeC,QAAQ,SAAUR,EAASC,KAAKjB,IAC/CmB,OAAOC,MAAM,oCA6Cb,oBAEA,oBAAI3B,UAAU,OAAd,iCACA,mBAAGA,UAAU,OAAb,wBAEA,cAACkB,EAAA,EAAD,CAAQlB,UAAU,2BAA2BmB,QAAS1B,EAAtD,2B,QCtDKuC,EArDE,SAAC,GAAiG,IAA/FR,EAA8F,EAA9FA,KAAMS,EAAwF,EAAxFA,eAAgBC,EAAwE,EAAxEA,kBAAmBC,EAAqD,EAArDA,eAAgBC,EAAqC,EAArCA,oBAAqBC,EAAgB,EAAhBA,UAChG,EAAgC3C,mBAAS,IAAzC,mBAAO4C,EAAP,KAAiBC,EAAjB,KACA,EAA0B7C,mBAAS,IAAnC,mBAAO8C,EAAP,KAAcC,EAAd,KACMC,EAAgBC,mBAEtBC,qBAAU,WACR,IAAMC,EAAmBH,EAAcI,QAAQC,cAAc,iBAC1DF,IACDA,EAAiBG,SAAU,KAE5B,CAACxB,IAEJ,IAAMyB,EAAgB,SAACtC,GACrB4B,EAAY5B,EAAEC,OAAOJ,OAClBgC,GACDC,EAAS,KAiBb,OACE,qBAAKzC,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBwB,EAAK0B,WAC3B,qBAAKlD,UAAU,UAAUmD,IAAKT,EAA9B,SACGlB,EAAK4B,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAChB,wBAAOvD,UAAU,6BAAjB,UACE,uBAAOwD,KAAK,QAAQ1C,KAAK,SAASN,MAAO8C,EAAQ5C,SAAUuC,IAC1DK,IAFgDC,QAMtDf,GAAS,qBAAKxC,UAAU,kBAAf,SAAkCwC,IAC5C,wBAAQxC,UAAU,6CAA6CmB,QA3B9C,SAACR,GACxB,GAAgB,KAAb2B,EACD,OAAOG,EAAS,6BAElBR,GAAe,SAAAwB,GAAS,4BAAQA,GAAR,CAAmB,CAAEC,EAAGlC,EAAK0B,SAAUS,EAAGrB,QAClEC,EAAY,IACTJ,EAAiBD,EAAoB,EACtCE,EAAoBD,EAAiB,GAErCE,EAAU,IAkBN,0BCkBKuB,EA5DH,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAASrC,EAA0C,EAA1CA,KACtB,GADgE,EAApCsC,QAAoC,EAA3BC,eAA2B,EAAXC,KACTtE,mBAAS,IAArD,mBAAOuE,EAAP,KAAuBC,EAAvB,KACI3D,EAAKuB,eAAeqC,QAAQ,UAyBhC,OAxBAvB,qBAAU,WACR,IAAIwB,EAAU,EACdP,EAAQQ,SAAQ,SAACC,EAAQC,GACpBD,EAAOX,IAAMnC,EAAK+C,GAAOC,QAC1BJ,OAGJF,EAAkBE,KAEjB,IAgBD,qBAAKpE,UAAU,OAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,OAAd,yBACA,oBAAGA,UAAU,OAAb,UAAqBiE,EAArB,OAAyCzC,EAAKiD,UAK9C,cAACvD,EAAA,EAAD,CACAb,QAAQ,YACRqE,MAAM,YAENC,KAAM,CAAEC,UAAW,OAAQC,aAAc,GACzC7E,UAAU,+BAA+BmB,QA1BjD,WAEEC,IAAMC,KAAK,cAAc,CAACiD,OAAOT,EAAQiB,OAAOvE,IAC3Ce,MAAK,SAACC,GACHK,QAAQC,IAAIN,GACZG,OAAOC,MAAMJ,EAASC,KAAKC,SAC3BK,eAAeiD,WAAW,UAC1BrD,OAAOsD,SAAS,QAclB,oBAMA,cAAC9D,EAAA,EAAD,CACAlB,UAAU,0BACZK,QAAQ,YACRqE,MAAM,YACNO,KAAK,QACL/E,MAAO,CAAE0E,UAAW,SAAUM,UAAW,GACzC/D,QApCN,WACEW,eAAeiD,WAAW,WAoCtBI,KAAK,IAPH,oCCtBKC,EAzBD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASxB,EAAoB,EAApBA,QAASrC,EAAW,EAAXA,KACjC,OACE,sBAAKxB,UAAU,kBAAf,UACE,qBAAKA,UAAU,mBAAmBmB,QAASkE,IAC3C,sBAAKrF,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,mBAAGA,UAAU,mBAAb,0BACA,wBAAQA,UAAU,SAASmB,QAASkE,OAEtC,yBAASrF,UAAU,0BAAnB,SACE,6BACG6D,EAAQR,KAAI,SAACiB,EAAQf,GAAT,OACX,qBAAYvD,UAAU,OAAtB,UACE,4BAAG,iCAASsE,EAAOZ,MACnB,oBAAG1D,UAAWsE,EAAOX,IAAMnC,EAAK+B,GAAGiB,OAAS,4CAA8C,2CAA1F,0BAAoJF,EAAOX,KAC1JW,EAAOX,IAAMnC,EAAK+B,GAAGiB,QAAU,oBAAGxE,UAAU,yCAAb,6BAAuEwB,EAAK+B,GAAGiB,YAHxGjB,iB,QC6DR+B,EAhEH,WACV,MAAwB5F,mBAAS,GAAjC,mBAAO6F,EAAP,KAAaC,EAAb,KACA,EAA4C9F,mBAAS,GAArD,mBAAOyC,EAAP,KAAuBsD,EAAvB,KACA,EAA8B/F,mBAAS,IAAvC,mBAAOgG,EAAP,KAAgBC,EAAhB,KACA,EAAkCjG,oBAAS,GAA3C,mBAAOkG,EAAP,KAAkBC,EAAlB,KAGAjD,qBAAU,WACI,IAAT2C,GACDO,cAXFC,aAaC,CAACR,IAyBJ,OACE,sBAAKvF,UAAU,MAAf,UACY,IAATuF,GAAc,cAAC,EAAD,CAAO9F,YAzBD,WACnBqC,eAAeqC,QAAQ,UAK3BqB,EAAQ,IAJN9D,OAAOC,MAAM,8BACbD,OAAOsD,SAAS,QAuBN,IAATO,GAAc,cAAC,EAAD,CACb/D,KAAMwE,EAASxE,KAAKW,GACpBF,eAAgB0D,EAChBzD,kBAAmB8D,EAASxE,KAAKiD,OACjCtC,eAAgBA,EAChBC,oBAAqBqD,EACrBpD,UAAWmD,IAEH,IAATD,GAAc,cAAC,EAAD,CACb1B,QAAS6B,EACTlE,KAAMwE,EAASxE,KACfsC,QAxBoB,WACxB2B,EAAkB,GAClBE,EAAW,IACXH,EAAQ,IAsBJzB,eAAgB,kBAAM8B,GAAa,MAIpCD,GAAa,cAAC,EAAD,CACZP,QAAS,kBAAMQ,GAAa,IAC5BhC,QAAS6B,EACTlE,KAAMwE,EAASxE,WCzDRyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.85358c82.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\n/* import Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel'; */\nimport axios from \"axios\"\n\nconst Start = ({ onQuizStart }) => {\n  /* const [names,setNames]=useState(\"\")\n  const [email,setEmail]=useState(\"\")\n  const [phone,setPhone]=useState(0) */\n  const initialValues = { theEmail: \"\", theName: \"\", thePhone: \"\" };\n  const [formValues, setFromValues] = useState(initialValues);\n  /* const [newuser,setNewuser] = useState({}) */\n\n\n\n  /* const updateData = (e) => {\n    \n    const data = {\n        \n        theName: name,\n        thePhone:phone,\n        emailId: email,\n        \n    }\n    setNewuser({ data })\n\n\n} */\n\n  const handleChangeName = (e) => {\n\n    setFromValues({ ...formValues, theName: e.target.value });\n\n  }\n  const handleChangePhone = (e) => {\n\n    setFromValues({ ...formValues, thePhone: e.target.value })\n\n\n  }\n  const handleChangeEmail = (e) => {\n\n    setFromValues({ ...formValues, theEmail: e.target.value });\n\n  }\n\n\n  function onSubmit() {\n    setFromValues(formValues)\n    axios.post('../../details', formValues)\n      .then((response) => {\n        if (response.data.message) {\n          window.alert(response.data.message)\n        }\n        else {\n          console.log(response.data.id)\n          sessionStorage.setItem('userId', response.data.id)\n          window.alert('You can now start the test!')\n        }\n      });\n  }\n  return (\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n\n          <TextField\n            style={{ marginBottom: 25 }}\n            label=\"Enter Your Name\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            id=\"name\"\n            value={formValues.theNames}\n            onChange={(e) => { handleChangeName(e) }}\n          />\n          <TextField\n            style={{ marginBottom: 25 }}\n            label=\"Enter Your Phone No.\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            name=\"phone\"\n            //type=\"number\"\n            value={formValues.Phone}\n            onChange={(e) => { handleChangePhone(e) }}\n\n          />\n          <TextField\n            style={{ marginBottom: 25 }}\n            label=\"Enter Your Email ID\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            name=\"email\"\n            value={formValues.theEmail}\n            onChange={(e) => { handleChangeEmail(e) }}\n\n          />\n          {/* <FormControlLabel\n                        control={<Checkbox name=\"checkedA\" />}\n                        onClick={updateData}\n                        label=\"I accept the terms and conditions.\"\n                    /> */}\n          <br></br>\n          <Button className=\"button is-success is-medium\" onClick={onSubmit}>Submit</Button>\n\n          <h1 className=\"letg\">Predictability Test</h1>\n          <p className=\"letc\">Good luck!</p>\n\n          <Button className=\"button is-info is-medium\" onClick={onQuizStart}>Start</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Start;","import React, { useState, useEffect, useRef } from 'react';\n\nconst Question = ({ data, onAnswerUpdate, numberOfQuestions, activeQuestion, onSetActiveQuestion, onSetStep }) => {\n  const [selected, setSelected] = useState('');\n  const [error, setError] = useState('');\n  const radiosWrapper = useRef();\n\n  useEffect(() => {\n    const findCheckedInput = radiosWrapper.current.querySelector('input:checked');\n    if(findCheckedInput) {\n      findCheckedInput.checked = false;\n    }\n  }, [data]);\n\n  const changeHandler = (e) => {\n    setSelected(e.target.value);\n    if(error) {\n      setError('');\n    }\n  }\n  \n  const nextClickHandler = (e) => {\n    if(selected === '') {\n      return setError('Please select one option!');\n    }\n    onAnswerUpdate(prevState => [...prevState, { q: data.question, a: selected }]);\n    setSelected('');\n    if(activeQuestion < numberOfQuestions - 1) {\n      onSetActiveQuestion(activeQuestion + 1);\n    }else {\n      onSetStep(3);\n    }\n  }\n\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h2 className=\"mb-5\">{data.question}</h2>\n          <div className=\"control\" ref={radiosWrapper}>\n            {data.choices.map((choice, i) => (\n              <label className=\"radio has-background-light\" key={i}>\n                <input type=\"radio\" name=\"answer\" value={choice} onChange={changeHandler} />\n                {choice}\n              </label>\n            ))}\n          </div>\n          {error && <div className=\"has-text-danger\">{error}</div>}\n          <button className=\"button is-link is-medium is-fullwidth mt-4\" onClick={nextClickHandler}>Next</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Question;","import React, { useEffect, useState } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport axios from 'axios';\n\n/* import { formatTime } from '../utils'; */\n\nconst End = ({ results, data, onReset, onAnswersCheck, time }) => {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\nconst id = sessionStorage.getItem('userId')\n  useEffect(() => {\n    let correct = 0;\n    results.forEach((result, index) => {\n      if(result.a === data[index].answer) {\n        correct++;\n      }\n    });\n    setCorrectAnswers(correct);\n    // eslint-disable-next-line\n  }, []);\n  function clearStorage(){\n    sessionStorage.removeItem('userId')\n  }\n  function onSubmit() {\n    \n    axios.post('../../score',{result:results,userid:id})\n        .then((response) => {\n            console.log(response)\n            window.alert(response.data.message)\n            sessionStorage.removeItem('userId')\n            window.location='/'\n        });\n}\n\n  return(\n    <div className=\"card\">\n      <div className=\"card-content\">\n        <div className=\"content\">\n          <h1 className=\"letg\">Your Result</h1>\n          <p className=\"letc\">{correctAnswers} of {data.length}</p>\n          {/* <p><strong>{Math.floor((correctAnswers / data.length) * 100)}%</strong></p> */}\n          {/* <p><strong>Your time:</strong> {formatTime(time)}</p> */}\n          {/* <button className=\"button is-info mr-2\" onClick={onAnswersCheck}>Check your answers</button> */}\n          {/* <button className=\"button is-success\" onClick={onReset}>Try again</button> */}\n          <Button \n          variant=\"contained\"\n          color=\"secondary\"\n         // size=\"large\"\n          tyle={{ alignSelf: \"left\", marginbottom: 1}}\n          className=\"button is-success  is-medium\" onClick={onSubmit}>Submit</Button>\n          <Button\n          className=\"button is-info is-large\"\n        variant=\"contained\"\n        color=\"secondary\"\n        size=\"large\"\n        style={{ alignSelf: \"center\", marginTop: 7 }}\n        onClick={clearStorage}\n        href=\"/\"\n      >\n        Go To Homepage\n      </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default End;","import React from 'react';\n\nconst Modal = ({ onClose, results, data }) => {\n  return(\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={onClose}></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <p className=\"modal-card-title\">Your answers</p>\n          <button className=\"delete\" onClick={onClose}></button>\n        </header>\n        <section className=\"modal-card-body content\">\n          <ul>\n            {results.map((result, i) => (\n              <li key={i} className=\"mb-6\">\n                <p><strong>{result.q}</strong></p>\n                <p className={result.a === data[i].answer ? 'has-background-success has-text-white p-2' : 'has-background-danger has-text-white p-2'}>Your answer: {result.a}</p>\n                {result.a !== data[i].answer && <p className=\"has-background-link has-text-white p-2\">Correct answer: {data[i].answer}</p>}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Start from './components/Start';\nimport Question from './components/Question';\nimport End from './components/End';\nimport Modal from './components/Modal';\nimport quizData from './data/quiz.json';\n\nlet interval;\n\nconst App = () => {\n  const [step, setStep] = useState(1);\n  const [activeQuestion, setActiveQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n // const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    if(step === 3) {\n      clearInterval(interval);\n    }\n  }, [step]);\n\n  const quizStartHandler = () => {\n    if(!sessionStorage.getItem('userId')){\n      window.alert('please enter details first')\n      window.location='/'\n    }\n    else{\n    setStep(2);\n    }\n    // interval = setInterval(() => {\n    //   setTime(prevTime => prevTime + 1);\n    // }, 1000);\n  }\n\n  const resetClickHandler = () => {\n    setActiveQuestion(0);\n    setAnswers([]);\n    setStep(2);\n    //setTime(0);\n    // interval = setInterval(() => {\n    //   setTime(prevTime => prevTime + 1);\n    // }, 1000);\n  }\n\n  return (\n    <div className=\"App\">\n      {step === 1 && <Start onQuizStart={quizStartHandler} />}\n      {step === 2 && <Question \n        data={quizData.data[activeQuestion]}\n        onAnswerUpdate={setAnswers}\n        numberOfQuestions={quizData.data.length}\n        activeQuestion={activeQuestion}\n        onSetActiveQuestion={setActiveQuestion}\n        onSetStep={setStep}\n      />}\n      {step === 3 && <End \n        results={answers}\n        data={quizData.data}\n        onReset={resetClickHandler}\n        onAnswersCheck={() => setShowModal(true)}\n       // time={time}\n      />}\n\n      {showModal && <Modal \n        onClose={() => setShowModal(false)}\n        results={answers}\n        data={quizData.data}\n      />}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}